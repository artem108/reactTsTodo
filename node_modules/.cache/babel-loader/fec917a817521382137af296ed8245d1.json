{"ast":null,"code":"var _jsxFileName = \"/Users/arsh/Documents/reacttstodolist/todo-list/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { AddTodoForm } from './AddTodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  text: 'Walk the dog',\n  complete: false\n}, {\n  text: 'Write app',\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n  const [text, setText] = useState('');\n\n  const toggleTodo = selectedTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo = text => {\n    const newTodo = {\n      text,\n      complete: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const addText = text => {\n    setText(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {\n      addTodo: addTodo,\n      text: text,\n      addText: addText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"xIS0ommS+DW7ggYs6GxduqR9aZo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arsh/Documents/reacttstodolist/todo-list/src/App.tsx"],"names":["React","useState","TodoList","AddTodoForm","initialTodos","text","complete","App","todos","setTodos","setText","toggleTodo","selectedTodo","newTodos","map","todo","addTodo","newTodo","addText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAGA,MAAMC,YAAoB,GAAG,CAC3B;AACEC,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAD2B,EAK3B;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAL2B,CAA7B;;AAWA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOK,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,UAAU,GAAIC,YAAD,IAA6B;AAC9C,UAAMC,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAIA,IAAI,KAAKH,YAAb,EAA2B;AACzB,eAAO,EACL,GAAGG,IADE;AAELT,UAAAA,QAAQ,EAAE,CAACS,IAAI,CAACT;AAFX,SAAP;AAID;;AACD,aAAOS,IAAP;AACD,KARgB,CAAjB;AASAN,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAXD;;AAaA,QAAMG,OAAgB,GAAIX,IAAD,IAAwB;AAC/C,UAAMY,OAAO,GAAG;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,QAAQ,EAAE;AAAlB,KAAhB;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,OAAX,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIb,IAAD,IAAkB;AAChCK,IAAAA,OAAO,CAACL,IAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEG,KAAjB;AAAwB,MAAA,UAAU,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEK,OAAtB;AAA+B,MAAA,IAAI,EAAEX,IAArC;AAA2C,MAAA,OAAO,EAAEa;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAKD;;GA/BQX,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { AddTodoForm } from './AddTodoForm';\n\n\nconst initialTodos: Todo[] = [\n  {\n    text: 'Walk the dog',\n    complete: false,\n  },\n  {\n    text: 'Write app',\n    complete: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos);\n  const [text, setText] = useState('');\n\n  const toggleTodo = (selectedTodo: Todo):void => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo: AddTodo = (text: string): void => {\n    const newTodo = { text, complete: false };\n    setTodos([...todos, newTodo]);\n  };\n\n  const addText = (text: string) => {\n    setText(text);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <AddTodoForm addTodo={addTodo} text={text} addText={addText}/>\n    </>);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}